// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")

}
model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  posts     Post[]
  groups    UserGroup[]
}

model Group {
  id       Int        @id @default(autoincrement())
  name     String
  users    UserGroup[]
}

// Custom join table
model UserGroup {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  group     Group     @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId   Int
  createdAt DateTime  @default(now())

  @@unique([userId, groupId]) // Prevent duplicate user-group combinations
}
